function sortFilters(a, b)  {
	if (a === "ø" && b !== "ø") return -1
	else if (a !== "ø" && b === "ø") return 1
	else if (a === "ø" && b === "ø") return 0
    var an = padNumbers(String(a).toLowerCase()),
    	bn = padNumbers(String(b).toLowerCase());

    return an > bn ? 1 : -1;
}

function getFilters(typeFilter) {
	//get back active filters
	//typeFilter = "neg" or "sel" for negative or selective filters resp.
	var filters = $("#lab_"+typeFilter+"_filters").children();
	var f = [];
	for (var i = 0; i < filters.length; i++)
		f.push( $(filters[i]).attr("id").split("||") );
	return f
}

function filterData(data, typeFilter, filters) {
	//select rows of data according to the list filters generated by getFilters if typeFilter="sel"
	//if = "neg", remove rows of data
	//data = ints_data or current_data for example
	

	for (var e = 0; e < filters.length; e++) {
		var new_data = [];
		var id_f = filters[e][0]
		var val_f = decodeElmt(filters[e][1]).toLowerCase();
		for (var i = 0; i < data.length; i++) {
			var add = true; //for selective filters
			var selected = true; //for negative filters
			var content = data[i][id_f];
			//convert into array if it is required
			if (typeof content.length === "undefined")
				content = [content.toString().toLowerCase()];
			//compare the data with the filter
			var k = 0;
			while (add && selected && k < content.length) { //comparison filter to data content
				if (typeFilter === "sel" && decodeElmt(content[k]).toLowerCase() === val_f) {
					//selective filter
					new_data.push(data[i]);
					add = false;
				} else if (typeFilter === "neg" && decodeElmt(content[k]).toLowerCase() === val_f) {
					//negative filter
					selected = false;
				}
				k++;
			}
			if (typeFilter === "neg" && selected)
				new_data.push(data[i]);
		};
		data = new_data;
	};

	return data

	/*var new_data = [];
	for (var i = 0; i < data.length; i++) {
		var add = true; //for selective filters
		var selected = true; //for negative filters
		var e = 0;
		if (typeof filters.length === "undefined") add = false
		while (add && selected && e < filters.length) { //filters
			var id_f = filters[e][0]
			var val_f = decodeElmt(filters[e][1]).toLowerCase();
			var content = data[i][id_f];
			//convert into array if it is required
			if (typeof content.length === "undefined")
				content = [content.toString().toLowerCase()];
			//compare the data with the filter
			var k = 0;
			while (add && selected && k < content.length) { //comparison filter to data content
				if (typeFilter === "sel" && decodeElmt(content[k]).toLowerCase() === val_f) {
					//selective filter
					new_data.push(data[i])
					add = false;
				} else if (typeFilter === "neg" && decodeElmt(content[k]).toLowerCase() === val_f) {
					//negative filter
					selected = false;
				}
				k++;
			}
			e++;
		}
		//if the list is empty, select all rows
		if (typeof filters.length === "undefined" || filters.length === 0 || (typeFilter === "neg" && selected))
			new_data.push(data[i])
	}
	return new_data;*/
}

function updateData() {
	var filters = getFilters("neg");
	current_data = filterData(ints_data, "neg", filters);
	console.log(current_data.length)
	var filters = getFilters("sel");
	current_data = filterData(current_data, "sel", filters);
	console.log(current_data.length)
}

function chooseFilter(chosen, typeFilter) {
	//get back
	var val_f = $(chosen).val(); //value of the column
	var id_f = $(chosen).attr("id").split("_")[1]; //name of the column
	//display a new filter
	var code = "<div class='"+typeFilter+"_filter' id='" + id_f + "||" + val_f + "' onClick=''><i class='fa fa-times-circle-o'></i> " + decodeElmt(val_f) + "</div>";
	$("#lab_"+typeFilter+"_filters").append(code);
	$("#lab_"+typeFilter+"_filters").attr("style", "white-space:pre-line");
	//change 
	$(chosen).children("option[value='" + val_f + "']").remove();
	//update current_data
	/*if (typeFilter === "neg")
		current_data = filterData(current_data, "neg", [[id_f, val_f]]);
	else
		current_data = filterData(current_data, "sel", [[id_f, val_f]]);*/
	updateData();
	//update tbody
	$("tbody").html(tbody_generate("", current_data, fields_data));
}

function removeFilter(chosen, typeFilter) {
	var filter = $(chosen).attr("id").split("||"); //[0] = column name; [1] = filter value
	//remove the filter from the lab filters
	$(chosen).remove();
	//add back the filter name in the select values with a conserved sort
	var options = $("select[id='"+typeFilter+"_" + filter[0] + "']").children();
	var i = 0;
	var keep = true;
	while (keep && i < options.length) {
		var sorted = sortFilters(
			decodeElmt( filter[1] ),
			decodeElmt( $(options[i]).attr("value") )
		);
		if ($(options[i]).attr("value") !== "none" && (sorted === -1 || sorted === 0)) {
			$(options[i]).before("<option value='" + filter[1] + "'>" + decodeElmt(filter[1]) + "</option>")
			keep = false;
		}
		i++;
	}
	if (keep) //if it is the last element of the list
		$("select[id='"+typeFilter+"_" + filter[0] + "']").append("<option value='" + filter[1] + "'>" + decodeElmt(filter[1]) + "</option>")
	//update current_data
	updateData();
	//update tbody
	$("tbody").html(tbody_generate("", current_data, fields_data));
}

/*function filteredNegData(id_f, val_f) {
	var new_current_data = new Array();
	for (var i = 0; i < current_data.length; i++) {
		if (typeof ints_data[i][id_f].length !== "undefined") {
			var j = 0;
			var add = true
			while (add && j < current_data[i][id_f].length) {
				if (decodeElmt(current_data[i][id_f][j]).toString().toLowerCase() === val_f.toString().toLowerCase())
					add = false;
				j++;
			}
			if (add)
				new_current_data.push(current_data[i]);
		} else if (decodeElmt(current_data[i][id_f]).toString().toLowerCase() !== val_f.toString().toLowerCase())
			new_current_data.push(current_data[i]);
	}
	return new_current_data;
}

function filteredSelData(id_f, val_f) {
	var new_current_data = new Array();
	for (var i = 0; i < ints_data.length; i++) {
		if (typeof ints_data[i][id_f].length !== "undefined") {
			add = true;
			j = 0;
			while (add && j < ints_data[i][id_f].length) {
				if (decodeElmt(ints_data[i][id_f][j]).toString().toLowerCase() === val_f.toString().toLowerCase()) {
					new_current_data.push(ints_data[i]); //$.inArray(ints_data[i], current_data) === -1
					add = false;
				}
				j++;
			}				
		} else if (decodeElmt(ints_data[i][id_f]).toString().toLowerCase() === val_f.toString().toLowerCase())
			new_current_data.push(ints_data[i]);
	}
	return new_current_data;
	
}

function chooseFilter(chosen, typeFilter) {
	//get back
	var val_f = $(chosen).val(); //value of the column
	var decoded_val_f = decodeElmt(val_f);
	var id_f = $(chosen).attr("id").split("_")[1]; //name of the column
	//display a new filter
	var code = "<div class='"+typeFilter+"_filter' id='" + id_f + "||" + val_f + "' onClick=''><i class='fa fa-times-circle-o'></i> " + decoded_val_f + "</div>";
	$("#lab_"+typeFilter+"_filters").append(code);
	$("#lab_"+typeFilter+"_filters").attr("style", "white-space:pre-line");
	//change 
	$(chosen).children("option[value='" + val_f + "']").remove();
	//filter current_data
	if (typeFilter === "neg") current_data = filteredNegData(id_f, decoded_val_f);
	else current_data = filteredSelData(id_f, decoded_val_f);
	//Remove redundancies
	current_data = current_data.filter(function(elem, index, self) {
	    return index == self.indexOf(elem);
	});
	//update tbody
	$("tbody").html(tbody_generate("", current_data, fields_data));
}

function removeFilter(chosen, typeFilter) {
	var filter = $(chosen).attr("id").split("||"); //[0] = column name; [1] = filter value
	//remove the filter from the lab filters
	$(chosen).remove();
	//add back the filter name in the select values with a conserved sort
	var options = $("select[id='"+typeFilter+"_" + filter[0] + "']").children();
	var i = 0;
	var keep = true;
	while (keep && i < options.length) {
		var sorted = sortFilters(
			decodeElmt( filter[1] ),
			decodeElmt( $(options[i]).attr("value") )
		);
		if ($(options[i]).attr("value") !== "none" && (sorted === -1 || sorted === 0)) {
			$(options[i]).before("<option value='" + filter[1] + "'>" + decodeElmt(filter[1]) + "</option>")
			keep = false;
		}
		i++;
	}
	if (keep) //if it is the last element of the list
		$("select[id='"+typeFilter+"_" + filter[0] + "']").append("<option value='" + filter[1] + "'>" + decodeElmt(filter[1]) + "</option>")
	//get back all filter values and regenerate a new current_data
	var filters = $("#lab_"+typeFilter+"_filters").children();
	current_data = ints_data.slice();
	var f = [];
	for (var i = 0; i < filters.length; i++) {
		f = $(filters[i]).attr("id").split("||");
		if (typeFilter === "neg") current_data = filteredNegData(f[0], f[1]);
		else current_data = current_data.concat(filteredSelData(f[0], f[1]));
	};
	//Remove redundancies
	current_data = current_data.filter(function(elem, index, self) {
	    return index == self.indexOf(elem);
	});
	//update tbody
	$("tbody").html(tbody_generate("", current_data, fields_data));
}*/